ggtheme = theme_minimal(),
title = paste("Survival Curve for", column))
}
fit_and_plot(filtered_columns[1])
fit_and_plot("Hypertention_Detected", data_yes_list[["Hypertention_Detected"]], data_no_list[["Hypertention_Detected"]])
formula <- as.formula(paste("Surv(time = duration, event = event_observed)~", "Hypertention_Detected"))
fit_yes <- survfit(formula, data = as.data.frame( data_yes_list[["Hypertention_Detected"]]))
fit_no <- survfit(formula, data =as.data.frame(data_no_list[["Hypertention_Detected"]]))
ggsurvplot(list(Yes = fit_yes, No = fit_no),
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = paste("Survival Curve for", column))
formula <- as.formula(paste("Surv(time = duration, event = event_observed)~", as.character("Hypertention_Detected")))
fit_yes <- survfit(formula, data = as.data.frame( data_yes_list[["Hypertention_Detected"]]))
fit_no <- survfit(formula, data =as.data.frame(data_no_list[["Hypertention_Detected"]]))
ggsurvplot(list(Yes = fit_yes, No = fit_no),
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = paste("Survival Curve for", column))
survfit(formula = formula, data = data_yes_list[["Hypertention_Detected"]])
survfit(formula = formula, data = data_no_list[["Hypertention_Detected"]])
formula <- as.formula(paste("Surv(time = duration, event = event_observed)~", as.character("Hypertention_Detected")))
fit_yes <- survfit(formula, data = data_yes_list[["Hypertention_Detected"]])
fit_no <- survfit(formula, data =data_no_list[["Hypertention_Detected"]])
ggsurvplot(list(Yes = fit_yes, No = fit_no),
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = paste("Survival Curve for", column))
ggsurvplot(list(Yes = survfit(formula = formula, data = data_yes_list[["Hypertention_Detected"]]), No = survfit(formula = formula, data = data_no_list[["Hypertention_Detected"]])),
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = paste("Survival Curve for", column))
interest_disease$Hypertention_Detected = as.factor(interest_disease$Hypertention_Detected)
fit = surv_fit(surv_dses~Hypertention_Detected, data = interest_disease)
ggsurvplot(fit,
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = paste("Survival Curve for", column))
interest_disease$Mental_Detected = as.factor(interest_disease$Mental_Detected)
fit = surv_fit(surv_dses~Mental_Detected, data = interest_disease)
ggsurvplot(fit,
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = paste("Survival Curve for", Mental_Detected))
colnames(interest_disease)
interest_disease$Mental_Detected = as.factor(interest_disease$Mental_Detected)
fit = surv_fit(surv_dses~Mental_Detected, data = interest_disease)
ggsurvplot(fit,
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = paste("Survival Curve for", Mental_Detected))
interest_disease$Mental_Detected
fit
interest_disease$Mental_Detected = as.factor(interest_disease$Mental_Detected)
fit = surv_fit(surv_dses~Mental_Detected, data = interest_disease)
ggsurvplot(fit,
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = paste("Survival Curve for", as.character(Mental_Detected)))
interest_disease$Mental_Detected = as.factor(interest_disease$Mental_Detected)
fit = surv_fit(surv_dses~Mental_Detected, data = interest_disease)
ggsurvplot(fit,
data = interest_disease,
conf.int = TRUE,
pval = TRUE,
risk.table = TRUE,
linetype = "strata",
surv.median.line = "hv",
ggtheme = theme_minimal(),
title = "Survival Curve for (Mental Illness Detected)")
ggplot(base_haz, aes(x = time, y = hazard))+
geom_line()+
labs(x = "Days",
y = "Hazard",
title = "Baseline Hazard Function")+
scale_x_continuous(breaks = breaks, limits = c(0, 900))
haz_fit_resident = coxph(Surv(time = duration, event = event_observed)~1, data = clean_resident)
base_haz_resident = basehaz(haz_fit_resident, centered = F)
summary(haz_fit_resident)
ggplot(base_haz_resident, aes(x = time, y = hazard))+
geom_line()+
labs(x = "Days",
y = "Hazard",
title = "Baseline Hazard Function for In-Patient")+
scale_x_continuous(breaks = breaks, limits = c(0, 900))
haz_fit_non_resident = coxph(Surv(time = duration, event = event_observed)~1, data = clean_non_resident)
base_haz_non_resident = basehaz(haz_fit_non_resident, centered = F)
summary(haz_fit_non_resident)
ggplot(base_haz_non_resident, aes(x = time, y = hazard))+
geom_line()+
labs(x = "Days",
y = "Hazard",
title = "Baseline Hazard Function for Out-Patient")+
scale_x_continuous(breaks = breaks, limits = c(0, 900))
library(survival)
p = ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")
p$plot = p$plot + scale_x_continuous(breaks = breaks, limits = c(0, 900))
p
library(survival)
c = ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")
c$plot = c$plot + scale_x_continuous(breaks = breaks, limits = c(0, 900))
c
breaks <- c(6, 18, 36, 54, seq(100, 820, by = 100))
library(survival)
c = ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")
c$plot = c$plot + scale_x_continuous(breaks = breaks, limits = c(0, 900))
c
km_fit_resident = survfit(Surv(time = duration, event = event_observed)~1, data = clean_resident)
summary(km_fit_resident)
ggsurvplot(km_fit_resident, data = clean_resident,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
ggtheme = theme_bw(),
palette = c("#E7B800", "#2E9FDF"),
xlab = "Days",
ylab = "Survival Probability",
title = "Kaplan-Meier Survival Curve")
ggsurvplot(km_fit_resident, data = clean_resident,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
ggtheme = theme_bw(),
palette = c("#E7B800", "#2E9FDF"),
xlab = "Days",
ylab = "Survival Probability",
title = "Kaplan-Meier Survival Curve")+
scale_x_continuous(breaks = breaks, limits = c(0, 900))
ggsurvplot(km_fit_resident, data = clean_resident,
pval = TRUE, conf.int = TRUE,
risk.table = TRUE,
risk.table.col = "strata",
ggtheme = theme_bw(),
palette = c("#E7B800", "#2E9FDF"),
xlab = "Days",
ylab = "Survival Probability",
title = "Kaplan-Meier Survival Curve")$plot +
scale_x_continuous(breaks = breaks, limits = c(0, 900))
breaks <- c(6, 18, 36, 54, seq(100, 820, by = 100))
library(survival)
c = ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")$plot +
scale_x_continuous(breaks = breaks, limits = c(0, 900))
c
breaks <- c(6, 18, 36, 54, seq(100, 820, by = 100))
library(survival)
ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")$plot +
scale_x_continuous(breaks = breaks, limits = c(0, 900))
breaks <- c(6, 18, 36, 54, seq(100, 820, by = 100))
library(survival)
ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve") +
scale_x_continuous(breaks = breaks, limits = c(0, 900))
breaks <- c(6, 18, 36, 54, seq(100, 820, by = 100))
library(survival)
ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")$plot +
scale_x_continuous(breaks = breaks, limits = c(0, 900))
breaks <- c(6, 18, 36, 54, seq(100, 820, by = 100))
library(survival)
a = ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")
a$plot = $plot +
breaks <- c(6, 18, 36, 54, seq(100, 820, by = 100))
library(survival)
a = ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")
a$plot = a$plot + scale_x_continuous(breaks = breaks, limits = c(0, 900))
print(a)
breaks <- c(6, 18, 36, 54, seq(100, 820, by = 100))
library(survival)
a = ggsurvplot(km_fit, fun = "cumhaz",
xlab = "Days",
ylab = "Cumulative Hazard",
title = "Nelson-Aalen Cumulative Hazard Curve")
a$plot = a$plot + scale_x_continuous(breaks = breaks, limits = c(0, 900))
print(a$plot)
setwd("C:/Users/ADMIN/Documents/SEM 2 2024/STA4020 Design and Analysis of Experiments/Tasks and assignments/mid trimester")
knitr::opts_chunk$set(echo = TRUE)
q2_data = data.frame(Steer = rep(1:6, 6),
Period = rep(1:6, 6),
Treatment = c('B', 'D', 'C', 'F', 'A', 'E',
'A', 'F', 'D', 'C', 'E', 'B',
'C', 'A', 'B', 'E', 'F', 'D',
'E', 'B', 'F', 'D', 'C', 'A',
'D', 'C', 'E', 'A', 'B', 'F',
'F', 'E', 'A', 'B', 'D', 'C'),
Digestion = c(61.1, 69.3, 67.6, 61.6, 58.8,65.2,
56.9, 59.1, 64.0, 61.0, 65.7, 56.6,
66.5, 62.2, 61.1, 66.2, 62.0, 62.2,
66.7, 67.4, 63.6, 53.2, 61.7, 62.0,
67.8, 64.7, 63.6, 53.2, 61.7, 62.0,
71.4, 67.5, 55.8, 63.2, 68.0, 62.9))
q2_data
q1_data = data.frame(Fields = rep(1:5, 5),
Acre = rep(1:5, 5),
Treatment = c(B, D, E, A, C,
C, A, B, E, D,
D, C, A, B, E,
E, B, C, D, A,
A, E, D, C, B),
Yield = c(4.9, 6.4, 3.3, 9.5, 11.8,
9.3, 4.0, 6.2, 5.1, 5.4,
7.6, 15.4, 6.5, 6.0, 4.6,
6.3, 7.6, 13.2, 8.6, 4.9,
9.3, 6.3, 11.8, 15.9, 7.6))
q1_data = data.frame(Fields = rep(1:5, 5),
Acre = rep(1:5, 5),
Treatment = c('B', 'D', 'E', 'A', 'C',
'C', 'A', 'B', 'E', 'D',
'D', 'C', 'A', 'B', 'E',
'E', 'B', 'C', 'D', 'A',
'A', 'E', 'D', 'C', 'B'),
Yield = c(4.9, 6.4, 3.3, 9.5, 11.8,
9.3, 4.0, 6.2, 5.1, 5.4,
7.6, 15.4, 6.5, 6.0, 4.6,
6.3, 7.6, 13.2, 8.6, 4.9,
9.3, 6.3, 11.8, 15.9, 7.6))
q1_data
library(dplyr)
library(agricolae)
treatment_total = q1_data %>%
group_by(Treatment) %>%
summarize(Total_yield = sum(Yield))
treatment_total
sum(treatment_total$Total_yield)
sum(q1_data$Yield)
total_yield = sum(treatment_total$Total_yield)
total_yield
cor_fct_q1 = total_yield ^2 / nrow(q1_data)
cat("The correction factor is:\n\t\t", cor_fct_q1)
acre_tot_q1 = q1_data %>%
group_by(Acre) %>%
summarize(Acre_Yield = sum(Yield))
acre_tot_q1
q1_data = data.frame(Fields = rep(1:5, each = 5),
Acre = rep(1:5, times = 5),
Treatment = c('B', 'D', 'E', 'A', 'C',
'C', 'A', 'B', 'E', 'D',
'D', 'C', 'A', 'B', 'E',
'E', 'B', 'C', 'D', 'A',
'A', 'E', 'D', 'C', 'B'),
Yield = c(4.9, 6.4, 3.3, 9.5, 11.8,
9.3, 4.0, 6.2, 5.1, 5.4,
7.6, 15.4, 6.5, 6.0, 4.6,
6.3, 7.6, 13.2, 8.6, 4.9,
9.3, 6.3, 11.8, 15.9, 7.6))
q1_data
q1_data = data.frame(Fields = rep(1:5, times = 5),
Acre = rep(1:5, each = 5),
Treatment = c('B', 'D', 'E', 'A', 'C',
'C', 'A', 'B', 'E', 'D',
'D', 'C', 'A', 'B', 'E',
'E', 'B', 'C', 'D', 'A',
'A', 'E', 'D', 'C', 'B'),
Yield = c(4.9, 6.4, 3.3, 9.5, 11.8,
9.3, 4.0, 6.2, 5.1, 5.4,
7.6, 15.4, 6.5, 6.0, 4.6,
6.3, 7.6, 13.2, 8.6, 4.9,
9.3, 6.3, 11.8, 15.9, 7.6))
q1_data
Field_tot_q1 = q1_data %>%
group_by(Field) %>%
summarize(Field_Yield = sum(Yield))
Field_tot_q1 = q1_data %>%
group_by(Fields) %>%
summarize(Field_Yield = sum(Yield))
Field_tot_q1
q1_data = data.frame(Fields = rep(1:5, each = 5),
Acre = rep(1:5, times = 5),
Treatment = c('B', 'D', 'E', 'A', 'C',
'C', 'A', 'B', 'E', 'D',
'D', 'C', 'A', 'B', 'E',
'E', 'B', 'C', 'D', 'A',
'A', 'E', 'D', 'C', 'B'),
Yield = c(4.9, 6.4, 3.3, 9.5, 11.8,
9.3, 4.0, 6.2, 5.1, 5.4,
7.6, 15.4, 6.5, 6.0, 4.6,
6.3, 7.6, 13.2, 8.6, 4.9,
9.3, 6.3, 11.8, 15.9, 7.6))
q1_data
Field_tot_q1 = q1_data %>%
group_by(Fields) %>%
summarize(Field_Yield = sum(Yield))
Field_tot_q1
Rss_q1 = sum(Field_tot_q1$Field_Yield^2) / nrow(Field_tot_q1)
cat("The row sum of squares is:\n\t\t", Rss_q1)
Rss_q1 = (sum(Field_tot_q1$Field_Yield^2) / nrow(Field_tot_q1)) - cor_fct_q1
cat("The row sum of squares is:\n\t\t", Rss_q1)
Acre_tot_q1 = q1_data %>%
group_by(Acre) %>%
summarize(Acre_Yield = sum(Yield))
Acre_tot_q1
Acre_tot_q1 = q1_data %>%
group_by(Acre) %>%
summarize(Acre_Yield = sum(Yield))
Acre_tot_q1
Css_q1 = (sum(Acre_tot_q1$Acre_Yield^2) / nrow(Acre_tot_q1)) - cor_fct_q1
cat("The row sum of squares is:\n\t\t", Css_q1)
Css_q1 = (sum(Acre_tot_q1$Acre_Yield^2) / nrow(Acre_tot_q1)) - cor_fct_q1
cat("The column sum of squares is:\n\t\t", Css_q1)
Tss_q1 = sum(treatment_total$Total_yield^2)/ nrow(treatment_total) - cor_fct_q1
cat("The treatment sum of squares is:\n\t\t", Tss_q1)
tot_ss_q1 = sum(q1_data$Yield^2) - cor_fct_q1
cat("The total sum of squares is:\n\t\t", tot_ss_q1)
error_ss_q1 = tot_ss_q1 - Rss_q1 - Css_q1 - Tss_q1
cat("The error sum of squares is:\n\t\t", error_ss_q1)
df_row = nrow(Field_tot_q1) - 1
df_col = nrow(Acre_tot_q1) - 1
df_treat = nrow(treatment_total) - 1
df_total = nrow(q1_data) -1
df_err = df_total - df_row - df_col - df_treat
ms_row = Rss_q1 / df_row
ms_col = Css_q1/ df_col
ms_treat = Tss_q1/ df_treat
ms_err = error_ss_q1/df_err
f_treat = ms_treat/ ms_err
cat("The f-statistic is:\n\t\t", f_treat)
p_val = pf(f-statistic, df_row, df_total, lower.tail = F)
p_val = pf(f_treat, df_row, df_total, lower.tail = F)
cat("The p-value is:\n\t\t",p_val)
q1_data$Treatment = as.factor(q1_data$Treatment)
q1_aov = aov(Yield~Field + Column + Treatment, data = q1_data)
q1_data$Treatment = as.factor(q1_data$Treatment)
q1_aov = aov(Yield~Fields + Acre + Treatment, data = q1_data)
summary(q1_aov)
ms_row/ms_err
ms_err
df_treat
p_field = pf(ms_col/ms_err, df_treat, df_total, lower.tail = F)
cat("The p-value for Fields is:\n\t\t",p_field)
p_field = pf(ms_col/ms_err, df_col, df_total, lower.tail = F)
cat("The p-value for Fields is:\n\t\t",p_field)
p_acre = pf(ms_row/ms_err, df_row, df_total, lower.tail = F)
cat("The p-value for Acre is:\n\t\t",p_acre)
p_treat = pf(f_treat, df_treat, df_total, lower.tail = F)
cat("The p-value for treatment is:\n\t\t",p_treat)
q1_data$Treatment = as.factor(q1_data$Treatment)
q1_aov = aov(Yield~Fields + Acre + Treatment, data = q1_data)
summary(q1_aov)
library(ggplot2)
ggplot(q1_data, aes(x = Treatment, y = Yield, fill = Treatment))+
geom_boxplot()+
labs(
title = "Boxplot of Yield for each Treatment",
x = "Treatment",
y = "Spread"
)+
theme_minimal()+
scale_fill_brewer(palette = "Set5")
library(ggplot2)
ggplot(q1_data, aes(x = Treatment, y = Yield, fill = Treatment))+
geom_boxplot()+
labs(
title = "Boxplot of Yield for each Treatment",
x = "Treatment",
y = "Spread"
)+
theme_minimal()+
scale_fill_brewer(palette = "Set6")
library(ggplot2)
ggplot(q1_data, aes(x = Treatment, y = Yield, fill = Treatment))+
geom_boxplot()+
labs(
title = "Boxplot of Yield for each Treatment",
x = "Treatment",
y = "Spread"
)+
theme_minimal()+
scale_fill_brewer(palette = "Set3")
lsd_q1 = LSD.test(aov(Yield~Treatment, data = q1_data), "Treatment", p.adj = "none")
lsd_q1$groups
library(ggplot2)
ggplot(q1_data, aes(x = Treatment, y = Yield, fill = Treatment))+
geom_boxplot()+
labs(
title = "Boxplot of Yield for each Treatment",
x = "Treatment",
y = "Spread"
)+
theme_minimal()+
scale_fill_brewer(palette = "Set3")
mean(q1_data[, "Treatment" == "C"]$Yield)
mean(q1_data["Treatment" == "C",]$Yield)
mean(q1_data["Treatment" == "C",])
q1_data["Treatment" == "C",]
q1_data[,"Treatment" == "C"]
q1_data["Treatment" == "C",]
q1_data[Treatment == "C",]
q1_data[Treatment]
q1_data["Treatment"]
q1_data["Treatment" == "C"]
q1_data["Treatment" == "C",]
q1_data["Treatment" == "C", "Yield"]
q1_data[ "Yield", "Treatment" == "C"]
q1_data[q1_data$Treatment" == "C", "Yield"]
q1_data[q1_data$Treatment == "C", "Yield"]
mean( q1_data[q1_data$Treatment == "C", "Yield"])
sd(7.96, 6.84, 6.46)
sd(c(7.96, 6.84, 6.46))
mean(c(7.96, 6.84, 6.46))
mean( q1_data[q1_data$Treatment == "C" & "Yield" %in% c("A", "B","D"), ])
mean( q1_data[q1_data$Treatment == "C" && "Yield" %in% c("A", "B","D"), ])
mean( q1_data[q1_data$Treatment == "C" && q1_data$Yield %in% c("A", "B","D"), ])
mean( q1_data[q1_data$Treatment == "C" & q1_data$Yield %in% c("A", "B","D"), ])
mean( q1_data[q1_data$Treatment %in% c("A", "B","D"), "Yield"])
---
title: "Mid Trimester"
---
title: "Mid Trimester"
mean( q1_data[q1_data$Treatment %in% c("A", "B","D"), "Yield"])
sd( q1_data[q1_data$Treatment %in% c("A", "B","D"), "Yield"])
sd(c(7.96, 6.84, 6.46))
lsd_q1 = LSD.test(aov(Yield~Treatment, data = q1_data), "Treatment", p.adj = "none")
lsd_q1$groups
sd(c(6.84, 6.46, 5.12))
median( q1_data[q1_data$Treatment %in% c("A", "B","D"), "Yield"])
median( q1_data[q1_data$Treatment %in% c("A", "B","D"), "Yield"])
q2_data = data.frame(Steer = rep(1:6, each = 6),
Period = rep(1:6, times = 6),
Treatment = c('B', 'D', 'C', 'F', 'A', 'E',
'A', 'F', 'D', 'C', 'E', 'B',
'C', 'A', 'B', 'E', 'F', 'D',
'E', 'B', 'F', 'D', 'C', 'A',
'D', 'C', 'E', 'A', 'B', 'F',
'F', 'E', 'A', 'B', 'D', 'C'),
Digestion = c(61.1, 69.3, 67.6, 61.6, 58.8,65.2,
56.9, 59.1, 64.0, 61.0, 65.7, 56.6,
66.5, 62.2, 61.1, 66.2, 62.0, 62.2,
66.7, 67.4, 63.6, 53.2, 61.7, 62.0,
67.8, 64.7, 63.6, 53.2, 61.7, 62.0,
71.4, 67.5, 55.8, 63.2, 68.0, 62.9))
q2_data
q2_data$Treatment = as.factor(q2_data$Treatment)
str(q2_data)
q2_aov = aov(Digestion~Steer + Period + Treatment, data = q2_data)
summary(q2_aov)
lsd_q2 = LSD.test(aov(Digestion~Treatment, data = q2_data), "Treatment", p.adj = "none")
lsd_q2$groups
ggplot(q2_data, aes(x = Treatment, y = Digestion, fill = Treatment))+
geom_boxplot()+
labs(
title = "Boxplot of Digestion for each Ration",
x = "Ration",
y = "Spread"
)+
theme_minimal()+
scale_fill_brewer(palette = "Set3")
215000/4
215000/5
